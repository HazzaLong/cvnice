"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import boolresult as components_boolresult
from ...models.components import httpmetadata as components_httpmetadata
from ...models.components import toxicinputtype as components_toxicinputtype
from enum import Enum
from typing import Optional

class Threshold(str, Enum):
    BLOCK_NONE = 'BLOCK_NONE'
    BLOCK_ONLY_HIGH = 'BLOCK_ONLY_HIGH'
    BLOCK_MEDIUM_AND_ABOVE = 'BLOCK_MEDIUM_AND_ABOVE'
    BLOCK_LOW_AND_ABOVE = 'BLOCK_LOW_AND_ABOVE'


@dataclasses.dataclass
class TextBadnessWrapperTextToxicAnalysisTypePostRequest:
    UNSET='__SPEAKEASY_UNSET__'
    analysis_type: components_toxicinputtype.ToxicInputType = dataclasses.field(metadata={'path_param': { 'field_name': 'analysis_type', 'style': 'simple', 'explode': False }})
    request_body: str = dataclasses.field(metadata={'request': { 'media_type': 'text/plain' }})
    threshold: Optional[Threshold] = dataclasses.field(default=Threshold.BLOCK_NONE, metadata={'query_param': { 'field_name': 'threshold', 'style': 'form', 'explode': True }})
    api_key: Optional[str] = dataclasses.field(default=UNSET, metadata={'header': { 'field_name': 'api-key', 'style': 'simple', 'explode': False }})
    



@dataclasses.dataclass
class TextBadnessWrapperTextToxicAnalysisTypePostResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    bool_result: Optional[components_boolresult.BoolResult] = dataclasses.field(default=None)
    r"""Successful Response"""
    

